#!/usr/bin/bash

setcolor_base() {
    echo "rgb $1" > $keyboard
    echo "rgb $1" > $mouse

    accents_kb="h,j,k,l,w,a,s,d,m3,g11,profswitch"
    echo "rgb $accents_kb:$2" > $keyboard
    accents_mouse="wheel,thumb"
    echo "rgb $accents_mouse:$2" > $mouse
}
setcolor_key() {
    echo "rgb $1:$2" > $keyboard
}

daemon_monitors() {
    swayconfig="$HOME/.config/sway/config"
    left=$(grep "set \$mleft" $swayconfig | awk '{printf $3}')
    center=$(grep "set \$mcenter" $swayconfig | awk '{printf $3}')
    right=$(grep "set \$mright" $swayconfig | awk '{printf $3}')

    outputs=$(swaymsg -t get_outputs)
    left_status=$(swaymsg -t get_outputs | jq ".[] | select(.name==\"$left\").active")
    if [[ "${left_status}"  == "true" ]]; then
        setcolor_key "left" $1
    else
        setcolor_key "left" $2
    fi

    center_status=$(swaymsg -t get_outputs | jq ".[] | select(.name==\"$center\").active")
    if [[ "${center_status}"  == "true" ]]; then
        setcolor_key "down" $1
    else
        setcolor_key "down" $2
    fi

    right_status=$(swaymsg -t get_outputs | jq ".[] | select(.name==\"$right\").active")
    if [[ "${right_status}"  == "true" ]]; then
        setcolor_key "right" $1
    else
        setcolor_key "right" $2
    fi
}
daemon_dark() {
    if /home/misterio/bin/isdark; then
        setcolor_key "light" $2
    else
        setcolor_key "light" $1
    fi
}
daemon_mute() {
    if [[ $(pulseaudio-ctl full-status | awk '{print $2}') == "yes" ]]; then
        setcolor_key "mute" $1
    else
        setcolor_key "mute" $2
    fi
}
daemon_bw() {
    if [[ -f /tmp/bwtoken ]]; then
        setcolor_key "scroll" $1
    else
        setcolor_key "scroll" $2
    fi
}
daemon_tty() {
    for n in 1 2 3 4 5 6; do
        if ttystatus=$(w | grep tty$n) && ! echo $ttystatus | grep "agetty"; then
            if echo $ttystatus | grep "way"; then
                setcolor_key "f$n" $1
            else
                setcolor_key "f$n" $2
            fi
        else
            setcolor_key "f$n" $3
        fi
    done
}

daemon_workspaces() {
    # Workspace Colors
    declare -a workspaces=()
    while read line; do
        info=$(echo $line | cut -d '"' -f2)
        num=$(echo $info | cut -d ':' -f1)
        if [ "$num" = "10" ]; then
            num="0"
        fi

        if [ "$(echo $info | cut -d ':' -f2)" = "true" ]; then
            workspaces[$num]=$1
       elif [ "$(echo $info | cut -d ':' -f3)" = "true" ]; then
            workspaces[$num]=$2
        elif [ "$(echo $info | cut -d ':' -f4)" = "true" ]; then
            workspaces[$num]=$3
        else
            workspaces[$num]=$4
        fi
    done <<<$(i3-msg -t get_workspaces | jq '.[] | @sh "\(.num):\(.urgent):\(.focused):\(.visible)"' | tr " " "\n")
    for num in $(seq 0 9); do
        color=${workspaces[$num]}
        if [ -z "$color" ]; then
            color=$5
        fi
        setcolor_key $num $color
    done
}
daemon_player() {
    # Playing color
    status=$(mpris-ctl status 2>/dev/null)
    if [[ $status == "Playing" ]]; then
        setcolor_key "play" $1
    elif [[ $status == "Paused" ]]; then
        setcolor_key "play" $2
    else
        setcolor_key "play" $3
    fi
}
daemon_print() {
    if pgrep -x slurp > /dev/null; then
        setcolor_key "prtscn" $1
    else
        setcolor_key "prtscn" $2
    fi
}
daemon_lock() {
    if pgrep -x swaylock > /dev/null; then
        setcolor_key "lock" $1
    elif pgrep -x swaylock-blur > /dev/null; then
        setcolor_key "lock" $2
    else
        setcolor_key "lock" $3
    fi
}
bindings() {
    echo "bind profswitch:f13" > $keyboard
    echo "bind lock:f14" > $keyboard
    echo "bind light:f15" > $keyboard
}

if ! pgrep -x ckb-next-daemon > /dev/null; then
    echo "Error: Ckb-next is not running" >&2
    exit -1
fi
if ! pgrep -x openrgb > /dev/null; then
    echo "Error: OpenRGB is not running" >&2
    exit -2
fi

source ~/.colors
color_base=$(pastel mix $base00 $base05 | pastel darken 0.1 | pastel saturate 0.5 | pastel format hex | cut -d '#' -f2)
color_trim=$(pastel darken 0.1 $base0B | pastel saturate 0.8 | pastel format hex | cut -d '#' -f2)

color_urgent=$(pastel saturate 0.6 $base09 | pastel format hex | cut -d '#' -f2)
color_visible=$(pastel saturate 0.1 $base0F | pastel format hex | cut -d '#' -f2)
color_unfocused=$(pastel lighten 0.1 $base05 | pastel format hex | cut -d '#' -f2)

(openrgb --client; openrgb --client --device=0 --color $color_base --mode static) & \

keyboard="/dev/input/ckb1/cmd"
mouse="/dev/input/ckb2/cmd"
echo active > $keyboard
echo active > $mouse
bindings

setcolor_base $color_base $color_trim & \
while true; do
    #daemon_workspaces $color_urgent $color_trim $color_visible $color_unfocused $color_base & \
    daemon_mute "000000" $color_base & \
    daemon_bw $color_trim $color_visible & \
    daemon_tty $color_trim $color_visible $color_base & \
    daemon_lock $color_trim "000000" $color_base & \
    daemon_dark $color_visible $color_trim & \
    daemon_player $color_trim $color_visible $color_base & \
    daemon_print $color_trim $color_base & \
    daemon_monitors $color_trim $color_base
    sleep 0.4
done
